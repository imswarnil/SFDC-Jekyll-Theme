/* ============================================================================
   THEME.SCSS (DEFINITIVE & UNABRIDGED)
   Contains the CSS reset, the CSS variable generator, base styles,
   and core component styles.
   ============================================================================ */
@use "sass:map";

/* ============================================================================
   1. MODERN CSS RESET
   ============================================================================ */
*, *::before, *::after { box-sizing: border-box; margin: 0; padding: 0; }
html { -webkit-text-size-adjust: 100%; scroll-behavior: smooth; }
body { min-height: 100vh; }
img, picture, video, canvas, svg { display: block; max-width: 100%; }
input, button, textarea, select { font: inherit; }


/* ============================================================================
   2. CSS VARIABLE GENERATOR
   ============================================================================ */
:root {
  // --- A. Generate Light Theme (Default) ---
  @each $name, $value in $colors-light {
    @if $name != 'shadow-color-rgb' { --sf-#{$name}: #{$value}; }
  }
  @each $name, $value in $typography { --sf-#{$name}: #{$value}; }
  @each $name, $value in $spacing-scale { --sf-space-#{$name}: #{$value}; }
  @each $name, $value in $radii { --sf-radius-#{$name}: #{$value}; }
  @each $name, $value in $z-stack { --sf-z-#{$name}: #{$value}; }

  $shadow-color: rgba(#{map-get($colors-light, 'shadow-color-rgb')}, .08);
  @each $name, $value in $shadow-templates { --sf-shadow-#{$name}: #{$value} #{$shadow-color}; }
  --sf-focus-ring: 0 0 0 .14rem rgba(1,118,211,.9);

  // --- B. Generate Semantic Tokens ---
  --body-bg: var(--sf-gray-200);
  --body-fg: var(--sf-gray-800);
  --heading-fg: var(--sf-gray-900);
  --link-fg: var(--sf-brand-primary);
  --link-hover-fg: var(--sf-brand-primary-hover);
  --border-color: var(--sf-gray-400);
  --border-color-subtle: var(--sf-gray-300);
}

// --- C. Generate Alternate Themes ---
@each $theme-name, $theme-map in $themes {
  :root[data-theme="#{$theme-name}"] {
    @each $key, $value in $theme-map {
      @if $key != 'link-fg-override' and $key != 'shadow-color-rgb' { --sf-#{$key}: #{$value}; }
    }
    --body-bg: var(--sf-gray-200);
    --body-fg: var(--sf-gray-800);
    @if map-has-key($theme-map, 'link-fg-override') {
      --link-fg: #{map-get($theme-map, 'link-fg-override')};
      --link-hover-fg: #{lighten(map-get($theme-map, 'link-fg-override'), 10%)};
    } @else {
      --link-fg: var(--sf-brand-primary);
    }
    $shadow-color: rgba(#{map-get($theme-map, 'shadow-color-rgb')}, .45);
    @each $name, $value in $shadow-templates { --sf-shadow-#{$name}: #{$value} #{$shadow-color}; }
  }
}


/* ============================================================================
   3. BASE & TYPOGRAPHY STYLES
   ============================================================================ */
body {
  font-family: var(--sf-font-body);
  font-size: var(--sf-text-base);
  line-height: var(--sf-leading-relaxed);
  color: var(--body-fg);
  background-color: var(--body-bg);
  @include antialiased;
}

h1,h2,h3,h4,h5,h6 {
  margin: var(--sf-space-8) 0 var(--sf-space-4) 0;
  font-weight: map-get($font-weights, 'bold');
  line-height: var(--sf-leading-tight);
  color: var(--heading-fg);
}
h1 { font-size: var(--sf-text-3xl); }
h2 { font-size: var(--sf-text-2xl); }
p { max-width: var(--sf-measure); margin-bottom: var(--sf-space-4); }
a {
  color: var(--link-fg);
  text-decoration: none;
  transition: color .2s ease;
  &:hover { color: var(--link-hover-fg); }
}

/* ============================================================================
   4. CORE COMPONENT STYLES
   ============================================================================ */
// --- Buttons ---
.sf-btn {
  @include button-reset;
  display: inline-flex;
  align-items: center;
  justify-content: center;
  border: 1px solid transparent;
  font-weight: map-get($font-weights, 'semibold');
  padding: var(--sf-space-2) var(--sf-space-4);
  border-radius: var(--sf-radius-md);
  transition: all .2s ease;
  @include focus-visible;
}
.sf-btn--primary {
  background-color: var(--sf-brand-primary);
  color: var(--sf-gray-100);
  border-color: var(--sf-brand-primary);
  &:hover { background-color: var(--sf-brand-primary-hover); border-color: var(--sf-brand-primary-hover); }
}
.sf-btn--secondary {
  background-color: var(--sf-gray-100);
  color: var(--sf-gray-800);
  border-color: var(--sf-gray-400);
  &:hover { background-color: var(--sf-gray-200); }
}

// --- Cards ---
.sf-card {
  background-color: var(--sf-gray-100);
  border: 1px solid var(--sf-gray-300);
  border-radius: var(--sf-radius-lg);
  box-shadow: var(--sf-shadow-sm);
  padding: var(--sf-space-5);
}