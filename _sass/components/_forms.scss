/* ============================================================================
   COMPONENTS / FORMS (Definitive, SFDC Themed Edition)
   ============================================================================ */

// --- 1. Field Wrapper ---
// A container for a label, input, and help text.
.sf-field {
  margin-bottom: var(--sf-5);
}

// --- 2. Form Label ---
.sf-form__label {
  display: inline-block;
  margin-bottom: var(--sf-2);
  font-weight: 600;
  font-size: .9rem;
  color: var(--sf-fg-2);

  // Style for required fields
  .sf-required {
    color: var(--sf-danger);
    font-weight: 400;
    margin-left: var(--sf-1);
  }
}

// --- 3. Base Input Styles (Text, Email, Password, etc.) ---
.sf-input,
.sf-textarea,
.sf-select {
  display: block;
  width: 100%;
  background: var(--sf-bg-2);
  color: var(--sf-fg);
  border: 1px solid var(--sf-line-1);
  border-radius: var(--sf-radius-md);
  padding: .6rem .9rem;
  font-size: 1rem;
  line-height: 1.5;
  transition: border-color .15s ease, box-shadow .15s ease;

  &::placeholder {
    color: var(--sf-muted);
    opacity: 1; // Firefox fix
  }

  &:hover {
    border-color: var(--sf-muted);
  }

  // Focus state for accessibility
  &:focus,
  &:focus-visible {
    outline: none;
    border-color: var(--sf-brand);
    box-shadow: var(--sf-focus);
  }

  // Disabled state
  &:disabled {
    background-color: var(--sf-bg-1);
    color: var(--sf-muted);
    cursor: not-allowed;
  }
}

// --- 4. Textarea Specifics ---
.sf-textarea {
  min-height: 120px;
  resize: vertical;
}

// --- 5. Select Dropdown ---
.sf-select {
  -webkit-appearance: none;
  -moz-appearance: none;
  appearance: none;
  background-image: url("data:image/svg+xml,%3csvg xmlns='http://www.w3.org/2000/svg' fill='none' viewBox='0 0 20 20'%3e%3cpath stroke='%238a96a3' stroke-linecap='round' stroke-linejoin='round' stroke-width='1.5' d='M6 8l4 4 4-4'/%3e%3c/svg%3e");
  background-repeat: no-repeat;
  background-position: right .7rem center;
  background-size: 1.5em 1.5em;
  padding-right: 2.5rem; // Make space for the arrow
}
[data-theme="dark"] .sf-select {
  // Use a lighter arrow for dark mode
  background-image: url("data:image/svg+xml,%3csvg xmlns='http://www.w3.org/2000/svg' fill='none' viewBox='0 0 20 20'%3e%3cpath stroke='%239aa5b1' stroke-linecap='round' stroke-linejoin='round' stroke-width='1.5' d='M6 8l4 4 4-4'/%3e%3c/svg%3e");
}

// --- 6. Checkbox & Radio ---
.sf-check,
.sf-radio {
  display: inline-flex;
  align-items: center;
  gap: .6rem;
  cursor: pointer;
  user-select: none;
  
  // Hide the default browser input
  input {
    position: absolute;
    opacity: 0;
    pointer-events: none;
  }
}

.sf-check__box,
.sf-radio__dot {
  width: 1.25rem;
  height: 1.25rem;
  border: 1px solid var(--sf-line-1);
  background: var(--sf-bg-2);
  box-shadow: var(--sf-shadow-sm);
  display: inline-grid;
  place-items: center;
  transition: all .15s ease;
  flex-shrink: 0; // Prevent shrinking in flex containers
}

// --- Checkbox Specifics ---
.sf-check__box {
  border-radius: var(--sf-radius-sm);
}
.sf-check input:focus-visible + .sf-check__box {
  box-shadow: var(--sf-focus);
}
.sf-check input:checked + .sf-check__box {
  background: var(--sf-brand);
  border-color: var(--sf-brand);
  
  // The checkmark icon
  &::after {
    content: "";
    width: .35rem;
    height: .7rem;
    border: 2px solid #fff;
    border-left: 0;
    border-top: 0;
    transform: rotate(45deg);
    margin-top: -3px;
  }
}

// --- Radio Specifics ---
.sf-radio__dot {
  border-radius: 50%;
}
.sf-radio input:focus-visible + .sf-radio__dot {
  box-shadow: var(--sf-focus);
}
.sf-radio input:checked + .sf-radio__dot {
  border-color: var(--sf-brand);
  
  // The inner dot
  &::after {
    content: "";
    width: .65rem;
    height: .65rem;
    background: var(--sf-brand);
    border-radius: 50%;
  }
}

// --- 7. Help Text ---
// Small text that appears below an input.
.sf-field__help {
  margin-top: var(--sf-2);
  font-size: .875rem;
  color: var(--sf-muted);
}

// --- 8. Validation States ---
// Apply these classes to the input/textarea/select itself.
.sf-input--error,
.sf-textarea--error,
.sf-select--error {
  border-color: var(--sf-danger);
  // Give a subtle red glow on focus when there's an error
  &:focus,
  &:focus-visible {
    box-shadow: 0 0 0 .14rem color-mix(in oklab, var(--sf-danger), transparent 50%);
  }
}
// You can also have a dedicated error text
.sf-field__error-text {
  margin-top: var(--sf-2);
  font-size: .875rem;
  color: var(--sf-danger);
  font-weight: 500;
}

.sf-input--success {
  border-color: var(--sf-success);
}