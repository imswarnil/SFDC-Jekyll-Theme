/* ============================================================================
   ABSTRACTS / TOKENS (DEFINITIVE AUTO-GENERATOR)
   This file reads the SCSS maps from `_variables.scss` and automatically
   generates all CSS Custom Properties (`--sf-*`) for the `:root` scope.
   It also defines the derived semantic tokens.
   ============================================================================ */
@use "sass:map";

:root {
  /* ==========================================================================
     1. PRIMITIVE TOKENS (AUTO-GENERATED)
     ========================================================================== */

  // A. Generate Color Tokens from the $colors map
  @each $name, $value in $colors {
    --sf-#{$name}: #{$value};
  }
  
  // B. Generate Typography Tokens from the $typography map
  @each $name, $value in $typography {
    --sf-#{$name}: #{$value};
  }
  
  // C. Generate Spacing Tokens from the $spacing-scale map
  @each $name, $value in $spacing-scale {
    --sf-space-#{$name}: #{$value};
  }
  
  // D. Generate Radii and Sizing Tokens
  @each $name, $value in $radii {
    --sf-radius-#{$name}: #{$value};
  }
  @each $name, $value in $control-heights {
    --sf-control-height-#{$name}: #{$value};
  }
  @each $name, $value in $container-sizes {
    --sf-container-#{$name}: #{$value};
  }
  
  // E. Generate Effects and Layer Tokens
  @each $name, $value in $shadows {
    --sf-#{$name}: #{$value};
  }
  @each $name, $value in $z-stack {
    --sf-z-#{$name}: #{$value};
  }


  /* ==========================================================================
     2. SEMANTIC (DERIVED) TOKENS
     ========================================================================== */
  
  // A. Page & Body
  --body-bg: var(--sf-gray-200);
  --body-fg: var(--sf-gray-800);
  --heading-fg: var(--sf-gray-900);
  --link-fg: var(--sf-brand-primary);
  --link-hover-fg: var(--sf-brand-primary-hover);
  --border-color: var(--sf-gray-400);
  --border-color-subtle: var(--sf-gray-300);

  // B. Buttons
  --btn-radius: var(--sf-radius-md);
  --btn-primary-bg: var(--sf-brand-primary);
  --btn-primary-fg: var(--sf-gray-100);
  --btn-primary-hover-bg: var(--sf-brand-primary-hover);
  --btn-primary-active-bg: var(--sf-brand-primary-active);
  // ... (add other button types as needed)

  // C. Forms & Inputs
  --input-bg: var(--sf-gray-100);
  --input-fg: var(--sf-gray-800);
  --input-border: var(--border-color);
  --input-radius: var(--sf-radius-md);
  --input-height: var(--sf-control-height-md);
  --input-padding-x: var(--sf-space-3);
  --placeholder-fg: var(--sf-gray-500);
  --focus-ring: var(--sf-focus-ring);

  // D. Cards
  --card-bg: var(--sf-gray-100);
  --card-padding: var(--sf-space-5);
  --card-radius: var(--sf-radius-lg);
  --card-border: var(--border-color-subtle);
  --card-shadow: var(--sf-shadow-sm);
  --card-header-bg: transparent;
  
  // E. Navbar & Hero
  --nav-height: 3.5rem;
  --nav-bg: color-mix(in srgb, var(--sf-gray-100) 80%, transparent);
  --hero-grid-line-color: color-mix(in srgb, var(--border-color-subtle) 55%, transparent);
  // ... (etc.)
}