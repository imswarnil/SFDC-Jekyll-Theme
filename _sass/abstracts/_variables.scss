/* ============================================================================
   ABSTRACTS / VARIABLES (THE LOGIC LAYER)
   - Reads simple variables from `_settings.scss`.
   - Organizes them into the structured SCSS maps that power the theme's logic.
   ============================================================================ */
@use "sass:map";

// --- 1. BREAKPOINTS & SIZING MAPS ---
$breakpoints: ( 'break-0': 0, 'break-1': 640, 'break-2': 800, 'break-3': 1024, 'break-4': 1600 ) !default;
$rootsizes: ( 'rootsize-0': 16, 'rootsize-1': 16, 'rootsize-2': 17, 'rootsize-3': 18, 'rootsize-4': 19 ) !default;
$measures: ( 'measure-0': 550, 'measure-1': 600, 'measure-2': 650, 'measure-3': 700, 'measure-4': 750 ) !default;
$maxwidths: ( 'width-0': map-get($measures, 'measure-0'), 'width-1': map-get($measures, 'measure-1'), 'width-2': 800, 'width-3': 1100, 'width-4': 1400 ) !default;

// --- 2. GUTTER & SPACING MAPS ---
$gutterwidths: ( 'small': 1rem, 'medium': 2rem, 'large': 4rem ) !default;

// --- 3. MODULAR SCALE (FOR TYPOGRAPHY) ---
$modular-scale: ( 'ratio-0': 1.2, 'ratio-1': 1.2, 'ratio-2': 1.25, 'ratio-3': 1.25, 'ratio-4': 1.333 ) !default;
$scale: ();
@for $i from 0 to length($breakpoints) {
  $size: map.get($rootsizes, rootsize-#{$i});
  $ratio: map.get($modular-scale, ratio-#{$i});
  $map: ( 'giga': $size * $ratio * $ratio * $ratio * $ratio, 'mega': $size * $ratio * $ratio * $ratio, 'alpha': $size * $ratio * $ratio, 'beta': $size * $ratio, 'gamma': $size, 'delta': $size / $ratio, 'epsilon': $size / $ratio / $ratio, 'zeta': $size / $ratio / $ratio / $ratio );
  $scale: map.merge($scale, ('scale-#{$i}': $map));
}
$modular-scale: $scale;