/* ============================================================================
   ABSTRACTS / VARIABLES (THE DEFINITIVE & CORRECTED "FOUNDATION" FILE)
   - This single file contains ALL SCSS variables, maps, and logic.
   - The utility class generators have been rewritten to be 100% robust.
   ============================================================================ */
@use "sass:map";

/* ============================================================================
   1. CORE THEME CONFIGURATION (VARIABLES & MAPS)
   ============================================================================ */

// -----------------------------------------------------------------------------
// 1A. BREAKPOINTS
// -----------------------------------------------------------------------------
$breakpoints: (
  'xs': 30em, 'sm': 40em, 'md': 60em, 'lg': 75em, 'xl': 90em
) !default;

// -----------------------------------------------------------------------------
// 1B. GRID & LAYOUT
// -----------------------------------------------------------------------------
$grid-columns: 12 !default;
$grid-gutter: 1.5rem !default;
$container-sizes: (
  'sm': 40rem, 'md': 48rem, 'lg': 64rem, 'xl': 80rem, '2xl': 96rem
) !default;

// -----------------------------------------------------------------------------
// 1C. Z-INDEX STACKING ORDER
// -----------------------------------------------------------------------------
$z-stack: (
  'base': 0, 'content': 1, 'dropdown': 900, 'sticky': 1000, 'fixed': 1030,
  'modal-backdrop': 1050, 'modal': 1100, 'popover': 1200, 'tooltip': 1300, 'toast': 1400
) !default;

// -----------------------------------------------------------------------------
// 1D. MOTION & ANIMATION
// -----------------------------------------------------------------------------
$durations: (
  '100': .10s, '150': .15s, '200': .20s, '300': .30s,
  '500': .50s, '700': .70s, '1000': 1s
) !default;
$easings: (
  'standard': cubic-bezier(.2, 0, 0, 1), 'decel': cubic-bezier(0, 0, .2, 1),
  'accel': cubic-bezier(.4, 0, 1, 1), 'bounce': cubic-bezier(0.34, 1.56, 0.64, 1)
) !default;

// -----------------------------------------------------------------------------
// 1E. CONTROLS & ICONS
// -----------------------------------------------------------------------------
$control-heights: ( 'sm': 2rem, 'md': 2.5rem, 'lg': 3rem ) !default;
$icon-sizes: ( 'sm': 1rem, 'md': 1.25rem, 'lg': 1.5rem, 'xl': 2rem ) !default;

// -----------------------------------------------------------------------------
// 1F. SPACING & SIZING SCALE
// -----------------------------------------------------------------------------
$spacing-scale: (
  '0':0, '1':.25rem, '2':.5rem, '3':.75rem, '4':1rem, '5':1.5rem, '6':2rem,
  '7':2.5rem, '8':3rem, '9':3.5rem, '10':4rem, '12':6rem
);

// -----------------------------------------------------------------------------
// 1G. BORDERS & RADII
// -----------------------------------------------------------------------------
$radii: (
  'none': 0, 'sm': .25rem, 'md': .375rem, 'lg': .5rem, 'xl': .75rem,
  'pill': 9999px, 'circle': 50%
);
$border-widths: ( 'default': 1px, 'thick': 2px, 'heavy': 4px );

// -----------------------------------------------------------------------------
// 1H. TYPOGRAPHY
// -----------------------------------------------------------------------------
$font-weights: (
  'light': 300, 'normal': 400, 'medium': 500, 'semibold': 600, 'bold': 700, 'extrabold': 800
);

// -----------------------------------------------------------------------------
// 1I. SHADOW ELEVATION MAP
// -----------------------------------------------------------------------------
$elevations: (
  '1': var(--sf-shadow-sm), '2': var(--sf-shadow-md),
  '3': var(--sf-shadow-lg), '4': var(--sf-shadow-xl)
);


/* ============================================================================
   2. UTILITY CLASS GENERATORS (REWRITTEN & BULLETPROOF)
   ============================================================================ */

// -----------------------------------------------------------------------------
// 2A. SPACING UTILITIES (e.g., .sf-m-4, .sf-py-lg-6)
// -----------------------------------------------------------------------------
$spacing-properties: ( 'm': 'margin', 'p': 'padding' );

// Base (mobile-first) classes
@each $prop-abbr, $prop-name in $spacing-properties {
  @each $key, $value in $spacing-scale {
    .sf-#{$prop-abbr}-#{$key}  { #{$prop-name}: #{$value} !important; }
    .sf-#{$prop-abbr}t-#{$key} { #{$prop-name}-top: #{$value} !important; }
    .sf-#{$prop-abbr}b-#{$key} { #{$prop-name}-bottom: #{$value} !important; }
    .sf-#{$prop-abbr}s-#{$key} { #{$prop-name}-left: #{$value} !important; }
    .sf-#{$prop-abbr}e-#{$key} { #{$prop-name}-right: #{$value} !important; }
    .sf-#{$prop-abbr}x-#{$key} { #{$prop-name}-left: #{$value} !important; #{$prop-name}-right: #{$value} !important; }
    .sf-#{$prop-abbr}y-#{$key} { #{$prop-name}-top: #{$value} !important; #{$prop-name}-bottom: #{$value} !important; }
  }
  @if $prop-abbr == 'm' {
    .sf-mx-auto { margin-left: auto !important; margin-right: auto !important; }
  }
}

// Responsive classes
@each $bp-name, $bp-value in $breakpoints {
  @media (min-width: $bp-value) {
    @each $prop-abbr, $prop-name in $spacing-properties {
      @each $key, $value in $spacing-scale {
        .sf-#{$prop-abbr}-#{$bp-name}-#{$key}  { #{$prop-name}: #{$value} !important; }
        .sf-#{$prop-abbr}t-#{$bp-name}-#{$key} { #{$prop-name}-top: #{$value} !important; }
        .sf-#{$prop-abbr}b-#{$bp-name}-#{$key} { #{$prop-name}-bottom: #{$value} !important; }
        .sf-#{$prop-abbr}s-#{$bp-name}-#{$key} { #{$prop-name}-left: #{$value} !important; }
        .sf-#{$prop-abbr}e-#{$bp-name}-#{$key} { #{$prop-name}-right: #{$value} !important; }
        .sf-#{$prop-abbr}x-#{$bp-name}-#{$key} { #{$prop-name}-left: #{$value} !important; #{$prop-name}-right: #{$value} !important; }
        .sf-#{$prop-abbr}y-#{$bp-name}-#{$key} { #{$prop-name}-top: #{$value} !important; #{$prop-name}-bottom: #{$value} !important; }
      }
      @if $prop-abbr == 'm' {
        .sf-mx-#{$bp-name}-auto { margin-left: auto !important; margin-right: auto !important; }
      }
    }
  }
}

// -----------------------------------------------------------------------------
// 2B. FLEXBOX & ALIGNMENT UTILITIES
// -----------------------------------------------------------------------------
.sf-d-flex { display: flex !important; }
.sf-d-inline-flex { display: inline-flex !important; }
.sf-align-start { align-items: flex-start !important; }
.sf-align-center { align-items: center !important; }
.sf-align-end { align-items: flex-end !important; }
.sf-justify-start { justify-content: flex-start !important; }
.sf-justify-center { justify-content: center !important; }
.sf-justify-end { justify-content: flex-end !important; }
.sf-justify-between { justify-content: space-between !important; }

// -----------------------------------------------------------------------------
// 2C. DISPLAY & VISIBILITY UTILITIES
// -----------------------------------------------------------------------------
.sf-d-block { display: block !important; }
.sf-d-inline { display: inline !important; }
.sf-d-inline-block { display: inline-block !important; }
.sf-d-none { display: none !important; }

@each $bp-name, $bp-value in $breakpoints {
  @media (min-width: $bp-value) {
    .sf-d-#{$bp-name}-block { display: block !important; }
    .sf-d-#{$bp-name}-flex { display: flex !important; }
    .sf-d-#{$bp-name}-none { display: none !important; }
  }
}

// -----------------------------------------------------------------------------
// 2D. ACCESSIBILITY HELPERS
// -----------------------------------------------------------------------------
.sf-sr-only {
  position: absolute !important; width:1px; height:1px; padding:0; margin:-1px;
  overflow:hidden; clip:rect(0,0,0,0); white-space:nowrap; border:0;
}


/* ============================================================================
   3. LEGACY & HELPER VARIABLES (For Mixins)
   ============================================================================ */
$bp-xs: map-get($breakpoints, 'xs');
$bp-sm: map-get($breakpoints, 'sm');
$bp-md: map-get($breakpoints, 'md');
$bp-lg: map-get($breakpoints, 'lg');
$bp-xl: map-get($breakpoints, 'xl');
$space-keys: map-keys($spacing-scale) !default;