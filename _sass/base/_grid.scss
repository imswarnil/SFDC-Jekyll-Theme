/* ============================================================================
   LAYOUT / GRID.SCSS (DEFINITIVE & CORRECTED)
   - The faulty universal selector (`> *`) has been REMOVED.
   - The system is now truly mobile-first and allows responsive classes
     to apply correctly.
   ============================================================================ */
@use "sass:map";

/* ============================================================================
   1. CONTAINER
   ============================================================================ */
.sf-container {
  width: 100%;
  margin-inline: auto;
  padding-inline: var(--sf-grid-gap, #{$grid-gutter});

  @each $name, $size in $container-sizes {
    &.sf-container--#{$name} {
      max-width: $size;
    }
  }
}


/* ============================================================================
   2. GRID ROW
   ============================================================================ */
.sf-row {
  display: grid;
  grid-template-columns: repeat(var(--sf-grid-columns, #{$grid-columns}), 1fr);
  gap: var(--sf-grid-gap, #{$grid-gutter});

  &.sf-row--no-gutters {
    gap: 0;
  }
  &.sf-row--align-start { align-items: flex-start; }
  &.sf-row--align-center { align-items: center; }
  &.sf-row--align-end { align-items: flex-end; }
}


/* ============================================================================
   3. GRID COLUMNS & OFFSETS
   ============================================================================ */

// --- SCSS Mixin to generate column and offset classes ---
@mixin make-grid-classes($prefix: '') {
  // --- Column Span Classes ---
  // Example: `.sf-col-6`, `.sf-col-md-4`
  @for $i from 1 through $grid-columns {
    .sf-col#{$prefix}-#{$i} {
      grid-column: span #{$i};
    }
  }

  // --- Column Offset Classes ---
  // Pushes a column to the right.
  // Example: `.sf-offset-1`, `.sf-offset-md-3`
  @for $i from 0 through ($grid-columns - 1) {
    .sf-offset#{$prefix}-#{$i} {
      // We use +2 here because grid-column-start is 1-based and we want offset-0 to do nothing.
      grid-column-start: #{$i + 1};
    }
  }
}

// --- Generate Base (Mobile-First) Classes ---
// The `.sf-col` class is now the base. It defaults to full width.
.sf-col {
  grid-column: span $grid-columns;
}
// Generate non-responsive classes like .sf-col-6
@include make-grid-classes();


// --- Generate Responsive Classes for Each Breakpoint ---
@each $name, $bp in $breakpoints {
  @media (min-width: $bp) {
    // Generate classes with the breakpoint infix, e.g., `-sm`
    @include make-grid-classes('-#{$name}');
  }
}