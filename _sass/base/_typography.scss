/* ============================================================================
   BASE / TYPOGRAPHY.SCSS (THE DEFINITIVE "SPECIFICATION-COMPLETE" EDITION)
   - The single source of truth for all text styling.
   - Defines base body font styles and styles all semantic text elements.
   ============================================================================ */

/* --- 1. BASE FONT STYLES --- */
body {
  font-family: var(--sf-font-body);
  font-size: var(--sf-text-base);
  line-height: var(--sf-leading-relaxed);
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
}

/* --- 2. SEMANTIC ELEMENT STYLES --- */

// Headings
h1, h2, h3, h4, h5, h6 {
  margin-block: var(--sf-space-8) var(--sf-space-4);
  font-family: var(--sf-font-body);
  font-weight: map-get($font-weights, 'bold');
  line-height: var(--sf-leading-tight);
  color: var(--heading-fg);
  text-wrap: balance;
}
:is(h1, h2, h3, h4, h5, h6):first-child { 
  margin-top: 0; 
}

h1 { font-size: var(--sf-text-3xl); }
h2 { font-size: var(--sf-text-2xl); }
h3 { font-size: var(--sf-text-xl); }
h4 { font-size: var(--sf-text-lg); }
h5 { font-size: var(--sf-text-base); font-weight: map-get($font-weights, 'semibold'); }
h6 { font-size: var(--sf-text-sm); font-weight: map-get($font-weights, 'semibold'); }

// Paragraphs
p {
  margin-bottom: var(--sf-space-4);
  max-width: var(--sf-measure);
  text-wrap: pretty;
}

// Links
a {
  color: var(--link-fg);
  text-decoration: none;
  background-image: linear-gradient(var(--link-fg), var(--link-fg));
  background-position: 0% 100%;
  background-repeat: no-repeat;
  background-size: 0% 1px;
  transition: background-size .2s ease;

  &:hover {
    color: var(--link-hover-fg);
    background-size: 100% 1px;
  }
}
a:empty, .sf-btn { background-image: none !important; }

// Lists
ul, ol, dl {
  padding-left: var(--sf-space-5);
  margin-bottom: var(--sf-space-4);
}
li {
  padding-left: var(--sf-space-2);
  margin-bottom: var(--sf-space-2);
}
li::marker {
  color: var(--sf-brand-primary);
  font-weight: map-get($font-weights, 'semibold');
}
dt {
  font-weight: map-get($font-weights, 'bold');
  margin-top: var(--sf-space-4);
}
dd {
  margin-left: var(--sf-space-5);
  margin-bottom: var(--sf-space-3);
  color: var(--sf-fg-2);
}

// Blockquotes
blockquote {
  margin-inline: 0;
  margin-block: var(--sf-space-6);
  padding: var(--sf-space-4) var(--sf-space-5);
  border-left: 4px solid var(--border-color);
  background-color: var(--sf-bg-2);
  font-style: italic;
  color: var(--sf-fg-2);
  p:last-child { margin-bottom: 0; }
}
blockquote footer, blockquote cite {
  display: block;
  font-style: normal;
  font-size: var(--sf-text-sm);
  color: var(--sf-muted);
  margin-top: var(--sf-space-3);
}

// Code & Preformatted Text
code, kbd, samp, pre {
  font-family: var(--sf-font-mono);
  font-size: 0.9em;
  color: var(--sf-fg);
}
code, kbd, samp {
  background-color: var(--sf-bg-1);
  border: 1px solid var(--border-color-subtle);
  padding: .2em .4em;
  border-radius: var(--sf-radius-sm);
}
pre {
  background-color: var(--sf-bg-1);
  border: 1px solid var(--border-color-subtle);
  border-radius: var(--sf-radius-md);
  padding: var(--sf-space-4);
  overflow-x: auto;
  margin-bottom: var(--sf-space-5);
  line-height: var(--sf-leading-normal);
  white-space: pre-wrap;
  word-wrap: break-word;
  code { background: none; border: none; padding: 0; }
}

// Other Inline Text Elements
strong, b { font-weight: map-get($font-weights, 'bold'); }
em, i { font-style: italic; }
small { font-size: var(--sf-text-sm); }
abbr[title] { text-decoration: underline dotted; cursor: help; }
sub, sup { font-size: 0.75em; line-height: 0; position: relative; vertical-align: baseline; }
sub { bottom: -0.25em; }
sup { top: -0.5em; }
mark {
  background-color: color-mix(in srgb, var(--sf-semantic-warning) 40%, transparent);
  color: var(--heading-fg);
  padding: .1em .3em;
  border-radius: var(--sf-radius-sm);
}
address {
  font-style: normal;
}
figcaption {
  font-size: var(--sf-text-sm);
  color: var(--sf-muted);
  text-align: center;
}
th {
  font-weight: map-get($font-weights, 'semibold');
  text-align: inherit;
}
label {
  font-weight: map-get($font-weights, 'medium');
}
legend {
  font-weight: map-get($font-weights, 'semibold');
  padding-inline: var(--sf-space-1);
}