/* ============================================================================
   MIXINS.SCSS (DEFINITIVE & BACKWARD-COMPATIBLE)
   A library of all reusable SCSS mixins for the theme.
   ============================================================================ */

// --- RESPONSIVE DESIGN ---
@mixin breakpoint($point) {
  @if $point == sm { @media (min-width: $bp-sm) { @content; } }
  @else if $point == md { @media (min-width: $bp-md) { @content; } }
  @else if $point == lg { @media (min-width: $bp-lg) { @content; } }
  @else if $point == xl { @media (min-width: $bp-xl) { @content; } }
  @else { @warn "Breakpoint '#{$point}' not found."; }
}

// --- ACCESSIBILITY & INTERACTION ---
@mixin focus-ring { outline: none; box-shadow: var(--sf-focus-ring); border-radius: 2px; }
@mixin focus-visible { &:focus-visible { @include focus-ring; } }
@mixin hover { @media (hover: hover) and (pointer: fine) { &:hover { @content; } } }
@mixin motion-safe { @media (prefers-reduced-motion: no-preference) { @content; } }
@mixin sr-only { position: absolute !important; width:1px; height:1px; padding:0; margin:-1px; overflow:hidden; clip:rect(0, 0, 0, 0); white-space:nowrap; border:0; }

// --- TYPOGRAPHY ---
@mixin antialiased { -webkit-font-smoothing: antialiased; -moz-osx-font-smoothing: grayscale; }
@mixin truncate($lines: 1) {
  @if $lines == 1 { overflow: hidden; text-overflow: ellipsis; white-space: nowrap; }
  @else { display: -webkit-box; -webkit-line-clamp: $lines; -webkit-box-orient: vertical; overflow: hidden; }
}

// --- LAYOUT PRIMITIVES ---
@mixin center($axis: 'both') {
  display: flex;
  @if $axis == 'both' { align-items: center; justify-content: center; }
  @else if $axis == 'x' { justify-content: center; }
  @else if $axis == 'y' { align-items: center; }
}
@mixin stack($gap: var(--sf-space-4)) { display:flex; flex-direction:column; gap:$gap; }
@mixin cluster($gap: var(--sf-space-3), $align: center, $justify: flex-start, $wrap: wrap) { display:flex; flex-wrap:$wrap; align-items:$align; justify-content:$justify; gap:$gap; }

// --- EFFECTS & RESETS ---
@mixin button-reset { padding: 0; border: none; font: inherit; color: inherit; background-color: transparent; cursor: pointer; }
@mixin aspect-ratio($width, $height) {
  aspect-ratio: #{$width} / #{$height};
  @supports not (aspect-ratio: #{$width} / #{$height}) {
    position: relative;
    &::before { content: ''; display: block; padding-top: calc(#{$height} / #{$width} * 100%); }
    > * { position: absolute; inset: 0; }
  }
}