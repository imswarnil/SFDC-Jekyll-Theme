/* ============================================================================
   ABSTRACTS (ALL-IN-ONE)
   This single file contains the complete engine for the SFDC framework.
   It includes all necessary functions, variables, mixins, and placeholders,
   ensuring that all tools are available globally without import errors.
   ============================================================================ */

@use "sass:map";
@use "sass:math";
@use "sass:meta";

// ============================================================================
// PART 1: CONFIGURATION & FUNCTIONS
// - Global switches and settings.
// - Helper functions that must be defined before variables and mixins.
// ============================================================================

// --- Configuration Switches ---
$sfdc-enable-rounded: true !default;
$sfdc-enable-shadows: true !default;
$sfdc-enable-utility-classes: true !default;
$sfdc-base-font-size: 16px !default; // Root font-size for rem() calculations

// --- Helper Functions ---
@function sfdc-rem($pixels) {
  @if meta.type-of($pixels) != 'number' or not math.is-unitless($pixels) {
    @error "sfdc-rem() requires a unitless number (e.g., 16).";
  }
  @return math.div($pixels, $sfdc-base-font-size) * 1rem;
}

@function sfdc-get($map, $keys...) {
  @each $key in $keys {
    @if not map.has-key($map, $key) {
      @error "Key `#{$key}` not found in the provided map.";
    }
    $map: map.get($map, $key);
  }
  @return $map;
}


// ============================================================================
// PART 2: VARIABLES & DESIGN TOKENS
// - SCSS maps for configuration.
// - CSS Custom Properties (Tokens) generated from the maps.
// ============================================================================

// --- SCSS Configuration Maps ---
$sfdc-breakpoints: (
  "sm": 40em,  // 640px
  "md": 60em,  // 960px
  "lg": 75em   // 1200px
) !default;

$sfdc-colors: (
  "brand": #0176d3,
  "brand-darker": #0b5cab,
  "link": #0176d3,
  "text-body": #2e2e3a,
  "text-subtle": #3f4954,
  "text-muted": #8a96a3,
  "bg-soft": #f4f6f9,
  "bg-hard": #ffffff,
  "border": #cfd7e0,
  "success": #2e844a,
  "warning": #ffb75d,
  "danger": #ba0517
) !default;

$sfdc-spacing: (
  "0": 0, "1": 0.25rem, "2": 0.5rem, "3": 0.75rem, "4": 1rem,
  "5": 1.5rem, "6": 2rem, "8": 3rem
) !default;

$sfdc-font-sizes: (
  "sm": 0.875rem, "base": 1rem, "md": 1.125rem, "lg": 1.25rem,
  "xl": 1.5rem, "2xl": 2rem, "3xl": 2.5rem
) !default;

// --- Animation & Transition Variables (This was the source of the error) ---
$sfdc-transition-duration: 0.15s !default;
$sfdc-transition-timing: ease !default;
$sfdc-transition-base: all $sfdc-transition-duration $sfdc-transition-timing !default;

// --- CSS Custom Properties (Design Tokens) ---
:root {
  // Generate Color Tokens
  @each $name, $color in $sfdc-colors {
    --sfdc-color-#{$name}: #{$color};
  }
  // Generate Spacing Tokens
  @each $name, $space in $sfdc-spacing {
    --sfdc-spacing-#{$name}: #{$space};
  }
  // Generate Font Size Tokens
  @each $name, $size in $sfdc-font-sizes {
    --sfdc-font-size-#{$name}: #{$size};
  }
  // Static Tokens
  --sfdc-radius-sm: 0.25rem;
  --sfdc-radius-md: 0.375rem;
  --sfdc-radius-lg: 0.5rem;
  --sfdc-shadow-sm: 0 1px 2px rgba(0,0,0,.06);
  --sfdc-shadow-md: 0 4px 12px rgba(0,0,0,.08);
  --sfdc-focus: 0 0 0 0.14rem rgba(#{sfdc-get($sfdc-colors, "brand")}, 0.9);
  --sfdc-font-body: system-ui, -apple-system, sans-serif;
  --sfdc-font-mono: ui-monospace, SFMono-Regular, monospace;
}

// ============================================================================
// PART 3: MIXINS
// Reusable style blocks for generating CSS patterns efficiently.
// ============================================================================

// --- Responsive Media Queries ---
@mixin sfdc-respond-from($bp) {
  @media (min-width: sfdc-get($sfdc-breakpoints, $bp)) { @content; }
}
@mixin sfdc-respond-to($bp) {
  @media (max-width: #{sfdc-get($sfdc-breakpoints, $bp) - 0.02}) { @content; }
}

// --- Element Appearance ---
@mixin sfdc-on-hover-focus {
  &:hover, &:focus-visible { @content; }
}

// --- Visually Hidden (for Accessibility) ---
@mixin sfdc-visually-hidden {
  position: absolute;
  width: 1px;
  height: 1px;
  padding: 0;
  margin: -1px;
  overflow: hidden;
  clip: rect(0, 0, 0, 0);
  white-space: nowrap;
  border: 0;
}

// ============================================================================
// PART 4: PLACEHOLDERS (SILENT CLASSES)
// Reusable style blocks activated via @extend.
// ============================================================================

%sfdc-link-underline-animation {
  position: relative;
  &::after {
    content: "";
    position: absolute;
    bottom: -2px;
    left: 0;
    right: 0;
    height: 2px;
    background-color: currentColor;
    transform: scaleX(0);
    transform-origin: left;
    transition: transform $sfdc-transition-duration $sfdc-transition-timing;
  }
  @include sfdc-on-hover-focus {
    &::after { transform: scaleX(1); }
  }
}