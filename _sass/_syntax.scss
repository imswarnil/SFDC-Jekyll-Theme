// _syntax.scss
// Salesforce Lightning Design System (SLDS) Inspired Syntax Highlighting
// -------------------------------------------------------------------
// This file styles the code blocks generated by Jekyll's highlighter.
// It uses the color palette defined in `_variables.scss` to ensure
// code blocks are visually consistent with the rest of the theme.
//
// Based on the default Pygments stylesheet, adapted for our SLDS theme.
// -------------------------------------------------------------------


// --- 1. Parent Container Styling ---
// First, we style the container elements that Jekyll wraps around code blocks.
// This ensures they have the correct background, spacing, and font settings.
// -------------------------------------------------------------------
.highlight {
  // The `.highlight` class is the outermost wrapper.
  // We give it a background, border, and rounded corners to look like an SLDS "card".
  background-color: $sfdc-code-background;
  border: $sfdc-border-width solid $sfdc-border-color-weak;
  border-radius: $sfdc-border-radius;
  margin-bottom: $spacing-large;

  pre {
    // The `<pre>` tag is inside `.highlight`. We remove its default margins
    // and add padding to create space between the code and the border.
    margin: 0;
    padding: $spacing-medium;
    overflow-x: auto; // Allow horizontal scrolling for long lines of code.
    font-family: $sfdc-font-family-mono;
    font-size: $font-size-small;
    line-height: 1.5;
    color: $sfdc-text-default;
  }
}


// --- 2. Token-Specific Styling ---
// Now, we style the individual `<span>` tags that Jekyll generates for
// different code tokens (keywords, strings, comments, etc.).
// -------------------------------------------------------------------

// Note: We scope all styles within `.highlight` to avoid conflicts.
.highlight {

  // --- Base & Generic Tokens ---
  .w       { color: $sfdc-text-weak; } // Whitespace
  .err     { color: $sfdc-error-red; background-color: rgba($sfdc-error-red, 0.1); } // Error
  .ge      { font-style: italic; } // Generic.Emph
  .gs      { font-weight: $font-weight-bold; } // Generic.Strong

  // --- Comments ---
  .c, .c1, .cm, .cs, .cp {
    color: $sfdc-info-gray;
    font-style: italic;
  }

  // --- Keywords & Declarations ---
  // Keywords, Reserved, Constants, etc. We use a distinct purple.
  .k, .kc, .kd, .kn, .kp, .kr {
    color: #580d8c; // A deep SLDS-like purple
  }
  .kt      { color: #0d6647; } // Keyword.Type - a dark green

  // --- Literals (Strings, Numbers) ---
  .s, .sb, .sc, .sd, .s1, .s2, .sh, .si, .sx, .sr, .ss {
    color: $sfdc-success-green; // Strings use our success green.
  }
  .m, .mf, .mh, .mi, .mo, .il {
    color: #c96708; // Numbers use a warm orange.
  }

  // --- Names (Variables, Functions, Classes) ---
  .nb, .nc, .no, .nd, .ni, .ne, .nf, .nl, .nn, .nv, .vc, .vg, .vi {
    color: $sfdc-brand-accessible; // Names use our accessible brand blue.
  }
  .nt      { color: #005fb2; font-weight: $font-weight-bold; } // Name.Tag (like HTML tags)

  // --- Operators & Punctuation ---
  .o, .ow  { color: $sfdc-text-weak; } // Operator, Operator.Word
  .p       { color: $sfdc-text-default; } // Punctuation

  // --- Unused / Default Tokens (for completeness) ---
  .gd      { color: $sfdc-error-red; } // Generic.Deleted
  .gi      { color: $sfdc-success-green; } // Generic.Inserted
  .gh      { color: $sfdc-text-heading; font-weight: $font-weight-bold; } // Generic.Heading
  .gu      { color: $sfdc-text-heading; font-weight: $font-weight-bold; } // Generic.Subheading
  .gp      { color: $sfdc-text-weak; } // Generic.Prompt
  .go      { color: $sfdc-text-weak; } // Generic.Output
  .gt      { color: $sfdc-error-red; } // Generic.Traceback
  .na      { color: #005fb2; } // Name.Attribute
  .bp      { color: $sfdc-brand-accessible; } // Name.Builtin.Pseudo
}